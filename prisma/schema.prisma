// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  ARTIST
  VIEWER
}

model User {
  id       String @id @default(uuid())
  name     String
  username String @unique
  email    String @unique
  password String
  role     Role   @default(VIEWER)

  events        Event[]
  notifications Notification[]

  @@map("users")
}

model Event {
  id            String    @id @default(uuid())
  title         String
  slug          String    @unique
  content       String
  price         Float
  statusPayment Boolean   @map("status_payment")
  eventDate     String    @map("event_date")
  eventTime     String    @map("event_time")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @default(now()) @map("updated_at")
  authorId      String    @map("author_id")

  author      User         @relation(fields: [authorId], references: [id])
  attachments Attachment[]

  @@map("events")
}

model Attachment {
  id      String  @id @default(uuid())
  title   String
  url     String
  eventId String? @map("event_id")

  event Event? @relation(fields: [eventId], references: [id])

  @@map("attachments")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  recipient User @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
